#Milestone 1 - Build the ItemToPurchase class
class ItemToPurchase:
    def __init__(self, name="none", description="none", price=0.0, quantity=0):
        self.name = name
        self.description = description
        self.price = price
        self.quantity = quantity
    
    def print_item_cost(self):
        total_cost = self.price * self.quantity
        print(f"{self.name} {self.quantity} @ ${self.price:.2f} = ${total_cost:.2f}")

#Milestone 2 - Build the ShoppingCart class
class ShoppingCart:
    def __init__(self, customer_name="none", current_date="January 1, 2020"):
        self.customer_name = customer_name
        self.current_date = current_date
        self.cart_items = []

    #Add methods
    def add_item(self, item: ItemToPurchase):
        self.cart_items.append(item)

    def remove_item(self, item_name: str):
        found = False
        for item in self.cart_items:
            if item.name == item_name:
                self.cart_items.remove(item)
                found = True
                break
        if not found:
            print("Item not found in cart. Nothing removed.")

    def modify_item(self, item: ItemToPurchase):
        found = False
        for cart_item in self.cart_items:
            if cart_item.name == item.name:
                if item.description != "none":
                    cart_item.description = item.description
                if item.price != 0:
                    cart_item.price = item.price
                if item.quantity != 0:
                    cart_item.quantity = item.quantity
                found = True
                break
        if not found:
            print("Item not found in cart. Nothing modified.")

    def get_num_items_in_cart(self):
        total_quantity = sum(item.quantity for item in self.cart_items)
        return total_quantity

    def get_cost_of_cart(self):
        total_cost = sum(item.price * item.quantity for item in self.cart_items)
        return total_cost

    def print_total(self):
        total_cost = self.get_cost_of_cart()
        print(f"{self.customer_name}'s Shopping Cart - {self.current_date}")
        print(f"Number of Items: {self.get_num_items_in_cart()}")
        if total_cost == 0:
            print("SHOPPING CART IS EMPTY")
        else:
            for item in self.cart_items:
                print(f"{item.name} {item.quantity} @ ${item.price} = ${item.price * item.quantity}")
            print(f"Total: ${total_cost:.2f}")

    def print_descriptions(self):
        print(f"{self.customer_name}'s Shopping Cart - {self.current_date}")
        print("Item Descriptions")
        for item in self.cart_items:
            print(f"{item.name}: {item.description}")
    
def print_menu(cart):
     while True:
        print("\nMENU")
        print("a - Add item to cart")
        print("r - Remove item from cart")
        print("c - Change item quantity")
        print("i - Output items' descriptions")
        print("o - Output shopping cart")
        print("q - Quit")
        choice = input("\nChoose an option: ")

        if choice == 'a':
            name = input("Enter the item name: ")
            description = input("Enter the item description: ")
            price = float(input("Enter the item price: "))
            quantity = int(input("Enter the item quantity: "))
            new_item = ItemToPurchase(name, description, price, quantity)
            cart.add_item(new_item)
        elif choice == 'r':
            name = input("Enter the name of the item to remove: ")
            cart.remove_item(name)
        elif choice == 'c':
            name = input("Enter the item name: ")
            description = input("Enter the new item description (or 'none' to skip): ")
            price = float(input("Enter the new item price (or 0 to skip): "))
            quantity = int(input("Enter the new item quantity (or 0 to skip): "))
            updated_item = ItemToPurchase(name, description, price, quantity)
            cart.modify_item(updated_item)
        elif choice == 'i':
            cart.print_descriptions()
        elif choice == 'o':
            cart.print_total()
        elif choice == 'q':
            break
        else:
            print("Invalid choice. Please choose again.")


cart = ShoppingCart("John Doe", "February 1, 2020")
item1 = ItemToPurchase("Chocolate Chips", "semi-sweet", 3, 1)
item2 = ItemToPurchase("Bottled Water", "Purified water", 1, 10)
item3 = ItemToPurchase("Nike Romaleos", "Volt color", 189, 2)

cart.add_item(item1)
cart.add_item(item2)
cart.add_item(item3)

print_menu(cart)
